apiVersion: v1
kind: Secret
metadata:
  name: {{ template "ska-ser-namespace-manager.api.configName" . }}
  namespace: {{ template "ska-ser-namespace-manager.namespace" . }}
  labels:
    {{- include "ska-ser-namespace-manager.api.labels" . | nindent 4 }}
stringData:
  config.yml: |
    {{- include "ska-ser-namespace-manager.api.config" . | nindent 4 }}
---
{{- if .Values.api.service.https.enabled }}
{{- if .Values.api.pki.createSelfSignedCert -}}
{{- $ca := genCA (printf "*.%s.svc" (include "ska-ser-namespace-manager.namespace" .)) 1024 -}}
{{- $svcFullName := (printf "%s.%s.svc" (include "ska-ser-namespace-manager.api.serviceName" .) (include "ska-ser-namespace-manager.namespace" .)) -}}
{{- $svcName := (printf "%s.%s" (include "ska-ser-namespace-manager.api.serviceName" .) (include "ska-ser-namespace-manager.namespace" .)) -}}
{{- $cert := genSignedCert $svcFullName nil (list $svcFullName $svcName (include "ska-ser-namespace-manager.api.serviceName" .) ) 1024 $ca -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "ska-ser-namespace-manager.api.serviceName" . }}-cert
  namespace: {{ template "ska-ser-namespace-manager.namespace" . }}
  labels:
    {{- include "ska-ser-namespace-manager.api.labels" . | nindent 4 }}
  annotations:
    self-signed-cert: "true"
type: kubernetes.io/tls
data:
  tls.key: {{ $cert.Key | b64enc }}
  tls.crt: {{ (printf "%s\n%s" (trimSuffix "\n" $cert.Cert) $ca.Cert) | b64enc }}
  ca.crt: {{ $ca.Cert | b64enc }}
{{- end -}}
{{- else -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "ska-ser-namespace-manager.api.serviceName" . }}-cert
  namespace: {{ template "ska-ser-namespace-manager.namespace" . }}
  labels:
    {{- include "ska-ser-namespace-manager.api.labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.key: {{ .Values.api.pki.key }}
  tls.crt: {{ (printf "%s\n%s" (trimSuffix "\n" .Values.api.pki.cert) .Values.api.pki.ca) | b64enc }}
  ca.crt: {{ .Values.api.pki.ca | b64enc }}
{{- end -}}